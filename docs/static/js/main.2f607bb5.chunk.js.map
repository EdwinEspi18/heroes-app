{"version":3,"sources":["types/types.js","auth/auth.reducer.js","auth/AuthContext.jsx","hooks/useForm.js","components/LoginScreen.jsx","components/NavBar.jsx","hooks/useFetch.js","components/HeroCard.jsx","components/HeroList.jsx","selectors/getheroByPublisher.js","components/Loader.jsx","components/MarvelScreen.jsx","components/HeroScreen.jsx","components/DcScreen.jsx","components/SearchScreen.jsx","selectors/getHeroByName.js","routers/DashBoardRoutes.jsx","routers/PrivateRoute.jsx","routers/PublicRoute.jsx","routers/AppRouter.jsx","HeroesApp.js","index.js"],"names":["types","auth","state","action","type","payload","logged","authContext","createContext","useForm","initialState","useState","values","setValues","reset","handleChange","target","name","value","LoginScreen","history","useHistory","dispatch","useContext","AuthContext","className","placeholder","onChange","autoComplete","onClick","path","window","localStorage","getItem","replace","Navbar","user","to","activeClassName","exact","useFetch","url","isMounted","useRef","data","loading","error","setState","useEffect","current","fetch","then","res","json","catch","HeroCard","hero","id","images","connections","biography","work","style","maxWidth","src","lg","alt","groupAffiliation","alignment","charAt","toUpperCase","slice","firstAppearance","occupation","HeroList","publisher","senData","heroes","includes","Error","filter","GetheroByPublisher","map","Loader","role","MarvelScreen","ds","setDs","val","HeroScreen","heroeId","useParams","length","push","goBack","DcScreen","SearchScreen","location","useLocation","queryString","parse","search","q","heroesFiltered","find","GetHeroByName","undefined","pop","onSubmit","e","preventDefault","DashBoardRoutes","NavBar","component","PrivateRoute","isAuth","Component","rest","setItem","pathname","props","PublicRoute","AppRouter","init","JSON","App","useReducer","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f607bb5.chunk.js","sourcesContent":["export const types = {\n  login: '[auth] login',\n  logout: '[auth] logout',\n};\n","import { types } from '../types/types';\n\n/* const state = {\n  name: 'Edwin',\n  logged: true\n} */\n\nexport const auth = (state = {}, action) => {\n  switch (action.type) {\n    case types.login:\n      return { ...action.payload, logged: true };\n    case types.logout:\n      return { logged: false };\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","import { createContext } from 'react';\n\nconst authContext = createContext();\n\nexport default authContext;\n","import { useState } from 'react';\n\nconst useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n  const reset = () => {\n    setValues(initialState);\n  };\n  const handleChange = ({ target }) => {\n    setValues({ ...values, [target.name]: target.value });\n  };\n\n  return [values, handleChange, reset];\n};\n\nexport default useForm;\n","import { useContext } from 'react';\nimport AuthContext from '../auth/AuthContext';\nimport { types } from '../types/types';\nimport useForm from '../hooks/useForm';\n\nimport { useHistory } from 'react-router-dom';\nconst LoginScreen = () => {\n  const history = useHistory();\n  const { dispatch } = useContext(AuthContext);\n\n  const [values, handleChange] = useForm({ name: '' });\n\n  const handleClick = () => {\n    const path = window.localStorage.getItem('lastPath') || '/';\n    dispatch({ type: types.login, payload: { name: values.name } });\n    history.replace(path);\n  };\n  return (\n    <div className=\"container-fluid mt-5 row justify-content-center\">\n      <h1>Login</h1>\n      <hr />\n      <div className=\"col-5\">\n        <input\n          type=\"text\"\n          placeholder=\"Escribe tu nombre\"\n          className=\"form-control\"\n          name=\"name\"\n          value={values.name}\n          onChange={handleChange}\n          autoComplete=\"false\"\n        />\n      </div>\n      <button\n        className=\"btn btn-primary d-block w-25 justify-content-center\"\n        onClick={handleClick}\n      >\n        Login\n      </button>\n    </div>\n  );\n};\n\nexport default LoginScreen;\n","import React, { useContext } from 'react';\nimport { Link, NavLink, useHistory } from 'react-router-dom';\nimport AuthContext from '../auth/AuthContext';\nimport { types } from '../types/types';\n\nconst Navbar = () => {\n  const history = useHistory();\n  const {\n    user: { name },\n    dispatch,\n  } = useContext(AuthContext);\n\n  const handleLogout = () => {\n    dispatch({ type: types.logout });\n    history.replace('/login');\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        HeroesApp\n      </Link>\n\n      <div className=\"navbar-collapse\">\n        <div className=\"navbar-nav\">\n          <NavLink\n            activeClassName=\"active\"\n            className=\"nav-item nav-link\"\n            exact\n            to=\"/marvel\"\n          >\n            Marvel\n          </NavLink>\n\n          <NavLink\n            activeClassName=\"active\"\n            className=\"nav-item nav-link\"\n            exact\n            to=\"/dc\"\n          >\n            DC\n          </NavLink>\n        </div>\n      </div>\n\n      <div className=\"navbar-collapse collapse\">\n        <ul className=\"navbar-nav ml-auto\">\n          <NavLink\n            activeClassName=\"active\"\n            className=\"nav-item nav-link\"\n            exact\n            to=\"/search\"\n          >\n            Search\n          </NavLink>\n        </ul>\n      </div>\n\n      <div className=\"navbar-collapse w-100 order-xl-5 dual-collapse\">\n        <ul className=\"navbar-nav m-xl-auto\">\n          <span className=\"nav-item nav-link text-info\">\n            {name ? name : ''}\n          </span>\n          <button className=\"nav-item nav-link btn\" onClick={handleLogout}>\n            Logout\n          </button>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import { useEffect, useRef, useState } from 'react';\n\nconst useFetch = (url) => {\n  const isMounted = useRef(true);\n  const [state, setState] = useState({\n    data: null,\n    loading: true,\n    error: null,\n  });\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    setState({ data: null, loading: true, error: null });\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        if (isMounted.current) {\n          setState({ data, loading: false, error: null });\n        }\n      })\n      .catch(setState({ data: null, loading: false, error: true }));\n  }, [url]);\n\n  return state;\n};\n\nexport default useFetch;\n","import { Link } from 'react-router-dom';\n\nconst HeroCard = ({ hero }) => {\n  const { id, name, images, connections, biography, work } = hero;\n  return (\n    <article className=\"card\" style={{ maxWidth: 300 }}>\n      <img src={images.lg} className=\"card-img-top\" alt={name} />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{name}</h5>\n        <p className=\"card-text\">{connections.groupAffiliation}</p>\n      </div>\n      <ul className=\"list-group list-group-flush\">\n        <li className=\"list-group-item\">\n          Alineacion:{' '}\n          {biography.alignment.charAt(0).toUpperCase() +\n            biography.alignment.slice(1)}\n        </li>\n        <li className=\"list-group-item\">\n          Primera Aparicion:\n          <small className=\"text-muted\"> {biography.firstAppearance}</small>\n        </li>\n        <li className=\"list-group-item\">Ocupacion: {work.occupation}</li>\n        <li className=\"list-group-item\">\n          <Link to={`./hero/${id}`}>Mas...</Link>\n        </li>\n      </ul>\n    </article>\n  );\n};\n\nexport default HeroCard;\n","import useFetch from '../hooks/useFetch';\nimport { GetheroByPublisher } from '../selectors/getheroByPublisher';\nimport './heroList.css';\nimport HeroCard from './HeroCard';\n\nconst HeroList = ({ publisher, senData }) => {\n  const { data, loading, error } = useFetch(\n    'https://akabab.github.io/superhero-api/api/all.json'\n  );\n\n  let heroes = [];\n  if (data) {\n    heroes = GetheroByPublisher(data, publisher, error);\n    senData(loading);\n  }\n  return (\n    <section className=\"mt-1 ml2 row justify-content-center animate__animated animate__fadeIn\">\n      {heroes.map((hero) => (\n        <HeroCard key={hero.id} hero={hero} />\n      ))}\n    </section>\n  );\n};\n\nexport default HeroList;\n","export const GetheroByPublisher = (data, publisher, error) => {\n  const validPublisher = ['DC Comics', 'Marvel Comics'];\n\n  if (!validPublisher.includes(publisher)) {\n    throw new Error(`Publisher \"${publisher}\" no es correcto`);\n  }\n  if (error) {\n    throw new Error(`Hubo un error de peticion`);\n  }\n\n  return data.filter((hero) => hero.biography.publisher === publisher);\n};\n","const Loader = () => {\n  return (\n    <div className=\"spinner-border text-success\" role=\"status\">\n      <span className=\"visually-hidden\">Loading...</span>\n    </div>\n  );\n};\n\nexport default Loader;\n","import { useState } from 'react';\nimport HeroList from './HeroList';\nimport Loader from './Loader';\n\nconst MarvelScreen = () => {\n  const [ds, setDs] = useState(true);\n  const getLoading = (val) => {\n    setDs(val);\n  };\n  return (\n    <div>\n      <h1>Marvel Comics</h1>\n      {ds && <Loader />}\n      <HeroList publisher=\"Marvel Comics\" senData={getLoading} />\n    </div>\n  );\n};\n\nexport default MarvelScreen;\n","import { Redirect, useParams } from 'react-router';\nimport useFetch from '../hooks/useFetch';\nimport Loader from '../components/Loader';\n\nconst HeroScreen = ({ history }) => {\n  const handleReturn = () => {\n    if (history.length <= 2) {\n      history.push('/');\n    } else {\n      history.goBack();\n    }\n  };\n  const { heroeId } = useParams();\n  const { data, loading } = useFetch(\n    `https://akabab.github.io/superhero-api/api/id/${heroeId}.json`\n  );\n  if (!data) {\n    <Redirect to=\"/\" />;\n  }\n  return (\n    <div className=\"row mt-5\">\n      {loading && <Loader />}\n      {data && (\n        <>\n          <div className=\"col-4\">\n            <img\n              className=\"img-thumbnail animate__animated animate__fadeInLeft\"\n              src={data.images.lg}\n              alt={data.name}\n            />\n          </div>\n          <div className=\"col-8\">\n            <h3>{data.name}</h3>\n\n            <ul className=\"list-group list-group-flush\">\n              <li className=\"list-group-item\">\n                <b> {data.connections.groupAffiliation} </b>\n              </li>\n\n              <li className=\"list-group-item\">\n                <b>Publisher:</b> {data.biography.publisher}\n              </li>\n\n              <li className=\"list-group-item\">\n                <b>First appearance: </b> {data.biography.firstAppearance}\n              </li>\n            </ul>\n\n            <h5>Characters</h5>\n\n            <p>{data.name}</p>\n\n            <button className=\"btn btn-outline-info\" onClick={handleReturn}>\n              Return\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default HeroScreen;\n","import { useState } from 'react';\nimport HeroList from './HeroList';\nimport Loader from './Loader';\n\nconst DcScreen = () => {\n  const [ds, setDs] = useState(true);\n  const getLoading = (val) => {\n    setDs(val);\n  };\n  return (\n    <div>\n      <h1>Dc Comics</h1>\n      {ds && <Loader />}\n      <HeroList publisher=\"DC Comics\" senData={getLoading} />\n    </div>\n  );\n};\n\nexport default DcScreen;\n","import { useHistory, useLocation } from 'react-router';\nimport useForm from '../hooks/useForm';\nimport HeroCard from './HeroCard';\nimport queryString from 'query-string';\nimport useFetch from '../hooks/useFetch';\nimport { GetHeroByName } from '../selectors/getHeroByName';\n\nconst SearchScreen = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const { q = '' } = queryString.parse(location.search);\n  const [value, handleChange] = useForm({ search: q });\n\n  let heroesFiltered = [];\n  const { data, error } = useFetch(\n    'https://akabab.github.io/superhero-api/api/all.json'\n  );\n  if (data) {\n    heroesFiltered.push(\n      GetHeroByName(q.charAt(0).toUpperCase() + q.slice(1), data, error)\n    );\n  }\n  const handleSearch = (e) => {\n    e.preventDefault();\n    history.push(`?q=${value.search}`);\n  };\n  if (heroesFiltered[0] === undefined) {\n    heroesFiltered.pop();\n  }\n  return (\n    <div>\n      <h1>SearchScreen</h1>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-5\">\n          <h4>Search Form</h4>\n          <hr />\n          <form onSubmit={handleSearch}>\n            <input\n              type=\"text\"\n              placeholder=\"Find Your Heroe\"\n              className=\"form-control\"\n              name=\"search\"\n              value={value.search}\n              onChange={handleChange}\n              autoComplete=\"false\"\n            />\n\n            <button\n              type=\"submit\"\n              className=\"btn m-1 d-block btn-outline-primary\"\n            >\n              Search\n            </button>\n          </form>\n        </div>\n        <div className=\"col-7\">\n          <h4>Results</h4>\n          {q === '' && (\n            <div className=\"alert alert-info\">\n              Search a hero {heroesFiltered.length}\n            </div>\n          )}\n\n          {heroesFiltered.length === 0 && (\n            <div className=\"alert alert-danger\">\n              There is no a hero with {q}\n            </div>\n          )}\n          {heroesFiltered.length >= 1 &&\n            heroesFiltered.map((hero) => (\n              <HeroCard key={hero.id} hero={hero} />\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchScreen;\n","export const GetHeroByName = (heroeId, data, error) => {\n  if (error) {\n    throw new Error(`Hubo un error de peticion`);\n  }\n\n  return data.find((hero) => hero.name === heroeId);\n};\n","import { Redirect, Route, Switch } from 'react-router';\nimport NavBar from '../components/NavBar';\nimport MarvelScreen from '../components/MarvelScreen';\nimport HeroScreen from '../components/HeroScreen';\nimport DcScreen from '../components/DcScreen';\nimport SearchScreen from '../components/SearchScreen';\n\nconst DashBoardRoutes = () => {\n  return (\n    <>\n      <NavBar />\n      <div className=\"container mt-4\">\n        <Switch>\n          <Route exact path=\"/marvel\" component={MarvelScreen} />\n          <Route exact path=\"/hero/:heroeId\" component={HeroScreen} />\n          <Route exact path=\"/dc\" component={DcScreen} />\n          <Route exact path=\"/search\" component={SearchScreen} />\n          <Redirect to=\"/marvel\" />\n        </Switch>\n      </div>\n    </>\n  );\n};\n\nexport default DashBoardRoutes;\n","import { Redirect, Route } from 'react-router';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({ isAuth, component: Component, ...rest }) => {\n  window.localStorage.setItem('lastPath', rest.location.pathname);\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuth ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n\nexport default PrivateRoute;\n","import { Redirect, Route } from 'react-router';\nimport PropTypes from 'prop-types';\n\nconst PublicRoute = ({ isAuth, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        !isAuth ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n\nexport default PublicRoute;\n","import React, { useContext } from 'react';\nimport { Switch, HashRouter } from 'react-router-dom';\nimport authContext from '../auth/AuthContext';\nimport LoginScreen from '../components/LoginScreen';\nimport DashBoardRoutes from './DashBoardRoutes';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\n\nconst AppRouter = () => {\n  const { user } = useContext(authContext);\n  return (\n    <HashRouter>\n      <div>\n        <Switch>\n          <PublicRoute\n            exact\n            isAuth={user.logged}\n            path=\"/login\"\n            component={LoginScreen}\n          />\n\n          <PrivateRoute\n            isAuth={user.logged}\n            path=\"/\"\n            component={DashBoardRoutes}\n          />\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default AppRouter;\n","import { useEffect, useReducer } from 'react';\nimport auth from './auth/auth.reducer';\nimport authContext from './auth/AuthContext';\nimport AppRouter from './routers/AppRouter';\n\nconst init = () => {\n  return JSON.parse(window.localStorage.getItem('user')) || { logged: false };\n};\n\nconst App = () => {\n  const [user, dispatch] = useReducer(auth, {}, init);\n\n  useEffect(() => {\n    window.localStorage.setItem('user', JSON.stringify(user));\n  }, [user]);\n  return (\n    <div>\n      <authContext.Provider value={{ user, dispatch }}>\n        <AppRouter />\n      </authContext.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './HeroesApp';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}