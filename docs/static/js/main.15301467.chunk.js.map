{"version":3,"sources":["components/LoginScreen.jsx","components/NavBar.jsx","hooks/useFetch.js","components/HeroCard.jsx","components/HeroList.jsx","selectors/getheroByPublisher.js","components/Loader.jsx","components/MarvelScreen.jsx","components/HeroScreen.jsx","components/DcScreen.jsx","hooks/useForm.js","components/SearchScreen.jsx","selectors/getHeroByName.js","routers/DashBoardRoutes.jsx","routers/AppRouter.jsx","HeroesApp.js","index.js"],"names":["LoginScreen","history","className","onClick","replace","Navbar","to","activeClassName","exact","useFetch","url","isMounted","useRef","useState","data","loading","error","state","setState","useEffect","current","fetch","then","res","json","catch","HeroCard","hero","id","name","images","connections","biography","work","style","maxWidth","src","lg","alt","groupAffiliation","alignment","charAt","toUpperCase","slice","firstAppearance","occupation","HeroList","publisher","senData","heroes","includes","Error","filter","GetheroByPublisher","map","Loader","role","MarvelScreen","ds","setDs","val","HeroScreen","heroeId","useParams","length","push","goBack","DcScreen","useForm","initialState","values","setValues","reset","handleChange","target","value","SearchScreen","useHistory","location","useLocation","queryString","parse","search","q","heroesFiltered","find","GetHeroByName","undefined","pop","onSubmit","e","preventDefault","type","placeholder","onChange","autoComplete","DashBoardRoutes","NavBar","path","component","AppRouter","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15301467.chunk.js","sourcesContent":["const LoginScreen = ({ history }) => {\n  const handleClick = () => {\n    history.replace('/marvel');\n  };\n  return (\n    <div className=\"container mt-5\">\n      <h1>Login</h1>\n      <hr />\n      <button className=\"btn btn-primary\" onClick={handleClick}>\n        Login\n      </button>\n    </div>\n  );\n};\n\nexport default LoginScreen;\n","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Asociaciones\n      </Link>\n\n      <div className=\"navbar-collapse\">\n        <div className=\"navbar-nav\">\n          <NavLink\n            activeClassName=\"active\"\n            className=\"nav-item nav-link\"\n            exact\n            to=\"/marvel\"\n          >\n            Marvel\n          </NavLink>\n\n          <NavLink\n            activeClassName=\"active\"\n            className=\"nav-item nav-link\"\n            exact\n            to=\"/dc\"\n          >\n            DC\n          </NavLink>\n        </div>\n      </div>\n\n      <div className=\"navbar-collapse collapse\">\n        <ul className=\"navbar-nav ml-auto\">\n          <NavLink\n            activeClassName=\"active\"\n            className=\"nav-item nav-link\"\n            exact\n            to=\"/search\"\n          >\n            Search\n          </NavLink>\n        </ul>\n      </div>\n\n      <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n        <ul className=\"navbar-nav ml-auto\">\n          <NavLink\n            activeClassName=\"active\"\n            className=\"nav-item nav-link\"\n            exact\n            to=\"/login\"\n          >\n            Logout\n          </NavLink>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import { useEffect, useRef, useState } from 'react';\n\nconst useFetch = (url) => {\n  const isMounted = useRef(true);\n  const [state, setState] = useState({\n    data: null,\n    loading: true,\n    error: null,\n  });\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    setState({ data: null, loading: true, error: null });\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        if (isMounted.current) {\n          setState({ data, loading: false, error: null });\n        }\n      })\n      .catch(setState({ data: null, loading: false, error: true }));\n  }, [url]);\n\n  return state;\n};\n\nexport default useFetch;\n","import { Link } from 'react-router-dom';\n\nconst HeroCard = ({ hero }) => {\n  const { id, name, images, connections, biography, work } = hero;\n  return (\n    <article className=\"card\" style={{ maxWidth: 300 }}>\n      <img src={images.lg} className=\"card-img-top\" alt={name} />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{name}</h5>\n        <p className=\"card-text\">{connections.groupAffiliation}</p>\n      </div>\n      <ul className=\"list-group list-group-flush\">\n        <li className=\"list-group-item\">\n          Alineacion:{' '}\n          {biography.alignment.charAt(0).toUpperCase() +\n            biography.alignment.slice(1)}\n        </li>\n        <li className=\"list-group-item\">\n          Primera Aparicion:\n          <small className=\"text-muted\"> {biography.firstAppearance}</small>\n        </li>\n        <li className=\"list-group-item\">Ocupacion: {work.occupation}</li>\n        <li className=\"list-group-item\">\n          <Link to={`./hero/${id}`}>Mas...</Link>\n        </li>\n      </ul>\n    </article>\n  );\n};\n\nexport default HeroCard;\n","import useFetch from '../hooks/useFetch';\nimport { GetheroByPublisher } from '../selectors/getheroByPublisher';\nimport './heroList.css';\nimport HeroCard from './HeroCard';\n\nconst HeroList = ({ publisher, senData }) => {\n  const { data, loading, error } = useFetch(\n    'https://akabab.github.io/superhero-api/api/all.json'\n  );\n\n  let heroes = [];\n  if (data) {\n    heroes = GetheroByPublisher(data, publisher, error);\n    senData(loading);\n  }\n  return (\n    <section className=\"mt-1 ml2 row justify-content-center animate__animated animate__fadeIn\">\n      {heroes.map((hero) => (\n        <HeroCard key={hero.id} hero={hero} />\n      ))}\n    </section>\n  );\n};\n\nexport default HeroList;\n","export const GetheroByPublisher = (data, publisher, error) => {\n  const validPublisher = ['DC Comics', 'Marvel Comics'];\n\n  if (!validPublisher.includes(publisher)) {\n    throw new Error(`Publisher \"${publisher}\" no es correcto`);\n  }\n  if (error) {\n    throw new Error(`Hubo un error de peticion`);\n  }\n\n  return data.filter((hero) => hero.biography.publisher === publisher);\n};\n","const Loader = () => {\n  return (\n    <div className=\"spinner-border text-success\" role=\"status\">\n      <span className=\"visually-hidden\">Loading...</span>\n    </div>\n  );\n};\n\nexport default Loader;\n","import { useState } from 'react';\nimport HeroList from './HeroList';\nimport Loader from './Loader';\n\nconst MarvelScreen = () => {\n  const [ds, setDs] = useState(true);\n  const getLoading = (val) => {\n    setDs(val);\n  };\n  return (\n    <div>\n      <h1>Marvel Comics</h1>\n      {ds && <Loader />}\n      <HeroList publisher=\"Marvel Comics\" senData={getLoading} />\n    </div>\n  );\n};\n\nexport default MarvelScreen;\n","import { Redirect, useParams } from 'react-router';\nimport useFetch from '../hooks/useFetch';\nimport Loader from '../components/Loader';\n\nconst HeroScreen = ({ history }) => {\n  const handleReturn = () => {\n    if (history.length <= 2) {\n      history.push('/');\n    } else {\n      history.goBack();\n    }\n  };\n  const { heroeId } = useParams();\n  const { data, loading } = useFetch(\n    `https://akabab.github.io/superhero-api/api/id/${heroeId}.json`\n  );\n  if (!data) {\n    <Redirect to=\"/\" />;\n  }\n  return (\n    <div className=\"row mt-5\">\n      {loading && <Loader />}\n      {data && (\n        <>\n          <div className=\"col-4\">\n            <img\n              className=\"img-thumbnail animate__animated animate__fadeInLeft\"\n              src={data.images.lg}\n              alt={data.name}\n            />\n          </div>\n          <div className=\"col-8\">\n            <h3>{data.name}</h3>\n\n            <ul className=\"list-group list-group-flush\">\n              <li className=\"list-group-item\">\n                <b> {data.connections.groupAffiliation} </b>\n              </li>\n\n              <li className=\"list-group-item\">\n                <b>Publisher:</b> {data.biography.publisher}\n              </li>\n\n              <li className=\"list-group-item\">\n                <b>First appearance: </b> {data.biography.firstAppearance}\n              </li>\n            </ul>\n\n            <h5>Characters</h5>\n\n            <p>{data.name}</p>\n\n            <button className=\"btn btn-outline-info\" onClick={handleReturn}>\n              Return\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default HeroScreen;\n","import { useState } from 'react';\nimport HeroList from './HeroList';\nimport Loader from './Loader';\n\nconst DcScreen = () => {\n  const [ds, setDs] = useState(true);\n  const getLoading = (val) => {\n    setDs(val);\n  };\n  return (\n    <div>\n      <h1>Dc Comics</h1>\n      {ds && <Loader />}\n      <HeroList publisher=\"DC Comics\" senData={getLoading} />\n    </div>\n  );\n};\n\nexport default DcScreen;\n","import { useState } from 'react';\n\nconst useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n  const reset = () => {\n    setValues(initialState);\n  };\n  const handleChange = ({ target }) => {\n    setValues({ ...values, [target.name]: target.value });\n  };\n\n  return [values, handleChange, reset];\n};\n\nexport default useForm;\n","import { useHistory, useLocation } from 'react-router';\nimport useForm from '../hooks/useForm';\nimport HeroCard from './HeroCard';\nimport queryString from 'query-string';\nimport useFetch from '../hooks/useFetch';\nimport { GetHeroByName } from '../selectors/getHeroByName';\n\nconst SearchScreen = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const { q = '' } = queryString.parse(location.search);\n  const [value, handleChange] = useForm({ search: q });\n\n  let heroesFiltered = [];\n  const { data, error } = useFetch(\n    'https://akabab.github.io/superhero-api/api/all.json'\n  );\n  if (data) {\n    heroesFiltered.push(\n      GetHeroByName(q.charAt(0).toUpperCase() + q.slice(1), data, error)\n    );\n  }\n  const handleSearch = (e) => {\n    e.preventDefault();\n    history.push(`?q=${value.search}`);\n  };\n  if (heroesFiltered[0] === undefined) {\n    heroesFiltered.pop();\n  }\n  return (\n    <div>\n      <h1>SearchScreen</h1>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-5\">\n          <h4>Search Form</h4>\n          <hr />\n          <form onSubmit={handleSearch}>\n            <input\n              type=\"text\"\n              placeholder=\"Find Your Heroe\"\n              className=\"form-control\"\n              name=\"search\"\n              value={value.search}\n              onChange={handleChange}\n              autoComplete=\"false\"\n            />\n\n            <button\n              type=\"submit\"\n              className=\"btn m-1 d-block btn-outline-primary\"\n            >\n              Search\n            </button>\n          </form>\n        </div>\n        <div className=\"col-7\">\n          <h4>Results</h4>\n          {q === '' && (\n            <div className=\"alert alert-info\">\n              Search a hero {heroesFiltered.length}\n            </div>\n          )}\n\n          {heroesFiltered.length === 0 && (\n            <div className=\"alert alert-danger\">\n              There is no a hero with {q}\n            </div>\n          )}\n          {heroesFiltered.length >= 1 &&\n            heroesFiltered.map((hero) => (\n              <HeroCard key={hero.id} hero={hero} />\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchScreen;\n","export const GetHeroByName = (heroeId, data, error) => {\n  if (error) {\n    throw new Error(`Hubo un error de peticion`);\n  }\n\n  return data.find((hero) => hero.name === heroeId);\n};\n","import { Redirect, Route, Switch } from 'react-router';\nimport NavBar from '../components/NavBar';\nimport MarvelScreen from '../components/MarvelScreen';\nimport HeroScreen from '../components/HeroScreen';\nimport DcScreen from '../components/DcScreen';\nimport SearchScreen from '../components/SearchScreen';\n\nconst DashBoardRoutes = () => {\n  return (\n    <>\n      <NavBar />\n      <div className=\"container mt-4\">\n        <Switch>\n          <Route exact path=\"/marvel\" component={MarvelScreen} />\n          <Route exact path=\"/hero/:heroeId\" component={HeroScreen} />\n          <Route exact path=\"/dc\" component={DcScreen} />\n          <Route exact path=\"/search\" component={SearchScreen} />\n          <Redirect to=\"/marvel\" />\n        </Switch>\n      </div>\n    </>\n  );\n};\n\nexport default DashBoardRoutes;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  HashRouter,\n} from 'react-router-dom';\nimport LoginScreen from '../components/LoginScreen';\nimport DashBoardRoutes from './DashBoardRoutes';\n\nconst AppRouter = () => {\n  return (\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route exact path=\"/login\" component={LoginScreen} />\n          <Route path=\"/\" component={DashBoardRoutes} />\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default AppRouter;\n","import AppRouter from './routers/AppRouter';\n\nconst App = () => {\n  return (\n    <div>\n      <AppRouter />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './HeroesApp';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}